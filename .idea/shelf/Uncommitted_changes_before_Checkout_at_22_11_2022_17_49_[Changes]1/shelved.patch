Index: app/src/main/java/com/example/calculator/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.calculator\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.widget.Button\r\nimport com.example.calculator.databinding.ActivityMainBinding\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n    private lateinit var binding: ActivityMainBinding\r\n\r\n    private val expressionField = ExpressionField()\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivityMainBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        val bt1: Button = findViewById(R.id.button1)\r\n        val bt2: Button = findViewById(R.id.button2)\r\n        val bt3: Button = findViewById(R.id.button3)\r\n        val bt4: Button = findViewById(R.id.button4)\r\n        val bt5: Button = findViewById(R.id.button5)\r\n        val bt6: Button = findViewById(R.id.button6)\r\n        val bt7: Button = findViewById(R.id.button7)\r\n        val bt8: Button = findViewById(R.id.button8)\r\n        val bt9: Button = findViewById(R.id.button9)\r\n        val bt0: Button = findViewById(R.id.button0)\r\n        val btnDivision: Button = findViewById(R.id.button_division)\r\n        val btnMultiplication: Button = findViewById(R.id.button_multiplication)\r\n        val btnAddition: Button = findViewById(R.id.button_addition)\r\n        val btnSubtraction: Button = findViewById(R.id.button_subtraction)\r\n        val clearAll: Button = findViewById(R.id.ac)\r\n\r\n        expressionField.numberAction(bt1, binding)\r\n        expressionField.numberAction(bt2, binding)\r\n        expressionField.numberAction(bt3, binding)\r\n        expressionField.numberAction(bt4, binding)\r\n        expressionField.numberAction(bt5, binding)\r\n        expressionField.numberAction(bt6, binding)\r\n        expressionField.numberAction(bt7, binding)\r\n        expressionField.numberAction(bt8, binding)\r\n        expressionField.numberAction(bt9, binding)\r\n        expressionField.numberAction(bt0, binding)\r\n\r\n\r\n        expressionField.operationAction(btnDivision, binding)\r\n        expressionField.operationAction(btnMultiplication, binding)\r\n        expressionField.operationAction(btnAddition, binding)\r\n        expressionField.operationAction(btnSubtraction, binding)\r\n\r\n        expressionField.clearAction(clearAll, binding)\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/calculator/MainActivity.kt b/app/src/main/java/com/example/calculator/MainActivity.kt
--- a/app/src/main/java/com/example/calculator/MainActivity.kt	
+++ b/app/src/main/java/com/example/calculator/MainActivity.kt	
@@ -9,6 +9,7 @@
     private lateinit var binding: ActivityMainBinding
 
     private val expressionField = ExpressionField()
+    private val resultField = ResultField()
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
@@ -31,6 +32,7 @@
         val btnAddition: Button = findViewById(R.id.button_addition)
         val btnSubtraction: Button = findViewById(R.id.button_subtraction)
         val clearAll: Button = findViewById(R.id.ac)
+        val equals: Button = findViewById(R.id.button_equals)
 
         expressionField.numberAction(bt1, binding)
         expressionField.numberAction(bt2, binding)
@@ -51,5 +53,7 @@
 
         expressionField.clearAction(clearAll, binding)
 
+        resultField.resultAction(equals, binding)
+
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/calculator/ExpressionField.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.calculator\r\n\r\nimport android.widget.Button\r\nimport com.example.calculator.databinding.ActivityMainBinding\r\n\r\nclass ExpressionField {\r\n    private var canAddOperation: Boolean = false\r\n\r\n    fun numberAction(button: Button, binding: ActivityMainBinding) {\r\n        button.setOnClickListener {\r\n            binding.expression.append(button.text)\r\n            canAddOperation = true\r\n        }\r\n    }\r\n\r\n    fun operationAction(button: Button, binding: ActivityMainBinding) {\r\n        button.setOnClickListener {\r\n            if (canAddOperation) {\r\n                binding.expression.append(button.text)\r\n                canAddOperation = false\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    fun clearAction(button: Button, binding: ActivityMainBinding) {\r\n        button.setOnClickListener {\r\n            binding.expression.text = \"\"\r\n        }\r\n        canAddOperation = false\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/calculator/ExpressionField.kt b/app/src/main/java/com/example/calculator/ExpressionField.kt
--- a/app/src/main/java/com/example/calculator/ExpressionField.kt	
+++ b/app/src/main/java/com/example/calculator/ExpressionField.kt	
@@ -26,6 +26,7 @@
     fun clearAction(button: Button, binding: ActivityMainBinding) {
         button.setOnClickListener {
             binding.expression.text = ""
+            binding.result.text = ""
         }
         canAddOperation = false
     }
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'org.jetbrains.kotlin.android'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.calculator'\r\n    compileSdk 33\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.calculator\"\r\n        minSdk 26\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n        dataBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.core:core-ktx:1.7.0'\r\n    implementation 'androidx.appcompat:appcompat:1.4.1'\r\n    implementation 'com.google.android.material:material:1.5.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n//    apply plugin: 'kotlin-android-extensions'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	
+++ b/app/build.gradle	
@@ -45,5 +45,6 @@
     testImplementation 'junit:junit:4.13.2'
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
+    implementation 'com.ezylang:EvalEx:3.0.1'
 //    apply plugin: 'kotlin-android-extensions'
 }
\ No newline at end of file
